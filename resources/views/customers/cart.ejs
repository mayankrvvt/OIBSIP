<section class="cart py-16">
  <% if (session.cart) { %>
    <div class="order container mx-auto xl:w-1/2">
      <div class="flex items-center border-b border-gray-300 pb-4">
        <img src="/img/cart-black.png" alt="">
        <h1 class="font-bold ml-4 text-2xl">Order summary</h1>
      </div>

      <div class="pizza-list">
        <% for (let pizza of Object.values(session.cart.items)) { %>
          <div class="flex items-center my-8" id="item-<%= pizza.item._id %>">
            <img class="w-24" src="/img/<%= pizza.item.image %>" alt="">
            <div class="flex-1 ml-4">
              <h1><%= pizza.item.name %></h1>
              <span><%= pizza.item.size %></span>
            </div>

            <div class="flex items-center space-x-2">
              <button class="decrement-btn bg-gray-200 px-2 rounded" data-id="<%= pizza.item._id %>">-</button>
              <span id="qty-<%= pizza.item._id %>" class="flex-1"><%= pizza.qty %> Pcs</span>
              <button class="increment-btn bg-gray-200 px-2 rounded" data-id="<%= pizza.item._id %>">+</button>
              <button class="remove-btn text-red-500 ml-4" data-id="<%= pizza.item._id %>">Remove</button>
            </div>

            <span id="price-<%= pizza.item._id %>" class="font-bold text-lg ml-4">â‚¹ <%= pizza.item.price * pizza.qty %></span>
          </div>
        <% } %>
      </div>

      <hr>

      <div class="text-right py-4">
        <div>
          <span class="text-lg font-bold">Total Amount:</span>
          <span class="amount text-2xl font-bold ml-2">â‚¹<%= session.cart.totalPrice %></span>
        </div>

        <% if (user) { %>
          <form action="/orders" method="POST" class="mt-12 space-y-4" id="payment-form" data-stripe-key="<%= process.env.STRIPE_PUBLISHABLE_KEY %>">
            <div class="relative w-1/2 ml-auto mb-4">
              <select id="paymentType" name="paymentType"
                class="block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none focus:shadow-outline">
                <option value="cod">Cash on delivery</option>
                <option value="card">Pay with card</option>
              </select>
              <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                  <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/>
                </svg>
              </div>
            </div>
            <input name="phone" class="border border-gray-400 p-2 w-1/2 mb-4" type="text" placeholder="Phone number">
            <input name="address" class="border border-gray-400 p-2 w-1/2" type="text" placeholder="Address">
            <div class="mt-4">
              <button class="btn-primary px-6 py-2 rounded-full text-white font-bold mt-6" type="submit">Order Now</button>
            </div>
          </form>
        <% } else { %>
          <a href="/login" class="inline-block cursor-pointer btn-primary px-6 py-2 rounded-full text-white font-bold mt-6">Login to continue</a>
        <% } %>
      </div>
    </div>
  <% } else { %>
    <div class="empty-cart py-16">
      <div class="container mx-auto text-center">
        <h1 class="text-3xl font-bold mb-2">Cart Empty ðŸ˜•</h1>
        <p class="text-gray-500 text-lg mb-12">You probably haven't ordered a pizza yet.<br>To order a pizza, go to the main page.</p>
        <img class="w-2/5 mx-auto" src="/img/empty-cart.png" alt="empty-cart">
        <a href="/" class="inline-block px-6 py-2 rounded-full btn-primary text-white font-bold mt-12">Go back</a>
      </div>
    </div>
  <% } %>
</section>

<!-- âœ… Stripe + Cart UI Script -->
<% if (session.cart) { %>
<script src="https://js.stripe.com/v3/"></script>
<script>
  const stripe = Stripe("<%= process.env.STRIPE_PUBLISHABLE_KEY %>");
  const form = document.querySelector('#payment-form');
  
  if (form) {
    form.addEventListener('submit', async (e) => {
      const paymentType = document.querySelector('#paymentType').value;
      if (paymentType === 'card') {
        e.preventDefault();
        try {
          const response = await fetch('/create-checkout-session', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              phone: form.phone.value,
              address: form.address.value,
              total: <%= session.cart ? session.cart.totalPrice * 100 : 0 %>
            })
          });
          const data = await response.json();
          if (data.id) {
            stripe.redirectToCheckout({ sessionId: data.id });
          } else {
            alert('Stripe session creation failed.');
          }
        } catch (err) {
          console.error(err);
          alert('Failed to initiate payment.');
        }
      }
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
    const updateCartUI = async () => {
      const res = await fetch('/cart-data');
      if (res.ok) {
        const data = await res.json();
        document.querySelector('.amount').textContent = `â‚¹${data.totalPrice}`;
        data.items.forEach(pizza => {
          const qtySpan = document.querySelector(`#qty-${pizza._id}`);
          const priceSpan = document.querySelector(`#price-${pizza._id}`);
          if (qtySpan) qtySpan.textContent = `${pizza.qty} Pcs`;
          if (priceSpan) priceSpan.textContent = `â‚¹ ${pizza.price * pizza.qty}`;
        });
      }
    };

    const postCartAction = async (url, id) => {
      const res = await fetch(url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ _id: id })
      });
      if (res.ok) {
        await updateCartUI();
      }
    };

    document.querySelectorAll('.increment-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        postCartAction('/increment-cart', btn.dataset.id);
      });
    });

    document.querySelectorAll('.decrement-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        postCartAction('/decrement-cart', btn.dataset.id);
      });
    });

    document.querySelectorAll('.remove-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        postCartAction('/remove-from-cart', btn.dataset.id);
        const itemDiv = document.querySelector(`#item-${btn.dataset.id}`);
        if (itemDiv) itemDiv.remove();
      });
    });
  });
</script>
<% } %>

